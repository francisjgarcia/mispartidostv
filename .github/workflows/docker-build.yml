name: Docker image build

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.[0-9]+

permissions:
  contents: read

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  Build:
    name: Building docker image
    runs-on: ubuntu-latest
    environment:
      name: Production
    steps:
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Get repository name
        run: |
          echo DOCKER_REPOSITORY_NAME=${GITHUB_REPOSITORY,,} >> $GITHUB_ENV

      - name: Get tag version
        run: |
          echo DOCKER_IMAGE_TAG=$(echo "${GITHUB_REF##*/}" | cut -c2-) >> $GITHUB_ENV

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          push: true
          context: .
          file: ./deployments/Dockerfile
          tags: |
            ${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
            ${{ env.DOCKER_REPOSITORY_NAME }}:latest

      - name: Login to GitHub Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build and push to Github Packages
        uses: docker/build-push-action@v2
        with:
          push: true
          context: .
          file: ./deployments/Dockerfile
          tags: |
            ghcr.io/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.DOCKER_IMAGE_TAG }}
            ghcr.io/${{ env.DOCKER_REPOSITORY_NAME }}:latest

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GHCR_PAT }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ${{ steps.Changelog.outputs.changelog }}
          draft: false
          prerelease: false
